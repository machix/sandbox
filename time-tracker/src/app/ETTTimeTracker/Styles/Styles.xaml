<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Input.Toolkit"
    xmlns:models="clr-namespace:ETTTimeTracker.Models"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:viewModels="clr-namespace:ETTTimeTracker.ViewModels">

    <SolidColorBrush x:Key="CustomDarkButtonBrush" Color="#979797" />
    <SolidColorBrush x:Key="DefaultBlueBrush" Color="#4894FC" />
    <SolidColorBrush x:Key="DefaultDisabledBrush" Color="#BABABA" />
    <SolidColorBrush x:Key="DefaultPopupBackground" Color="#F2F2F2" />
    <SolidColorBrush x:Key="DefaultOutlineBrush" Color="#565656" />
    <SolidColorBrush x:Key="DefaultPaneBrush" Color="#EFEFEF" />

    <SolidColorBrush x:Key="TabBackground" Color="White" />
    <SolidColorBrush x:Key="TabHeaderBackground" Color="#565656" />
    <SolidColorBrush x:Key="SelectedTabBackground" Color="White" />
    <SolidColorBrush x:Key="TabHoverColor" Color="#EFEFEF" />

    <Style TargetType="{x:Type TabControl}">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid
                        ClipToBounds="True"
                        KeyboardNavigation.TabNavigation="Local"
                        SnapsToDevicePixels="True">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="20" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Name="Column0" Width="240" />
                            <ColumnDefinition Name="Column1" Width="*" />
                        </Grid.ColumnDefinitions>
                        <Border Grid.RowSpan="2" Background="{StaticResource TabHeaderBackground}" />
                        <Border
                            x:Name="TabHeaderBorder"
                            Grid.Row="1"
                            Grid.Column="0"
                            Panel.ZIndex="0"
                            Background="{StaticResource TabHeaderBackground}"
                            CornerRadius="0">
                            <TabPanel
                                x:Name="HeaderPanel"
                                Width="Auto"
                                Height="Auto"
                                Margin="4"
                                Panel.ZIndex="2"
                                IsItemsHost="true"
                                KeyboardNavigation.TabIndex="1"
                                RenderTransformOrigin="0.5,0.5">
                                <TabPanel.LayoutTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="0" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </TabPanel.LayoutTransform>
                                <TabPanel.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </TabPanel.RenderTransform>
                            </TabPanel>
                        </Border>


                        <!--  Border containing the Content of the Tab  -->
                        <!--  Default TabStripPlacement is Left  -->
                        <Border
                            x:Name="TabContentBorder"
                            Grid.RowSpan="2"
                            Grid.Column="1"
                            Panel.ZIndex="0"
                            Background="{StaticResource TabBackground}"
                            CornerRadius="0">
                            <Border
                                x:Name="ContentPanelBorder"
                                Panel.ZIndex="2"
                                Background="White"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                KeyboardNavigation.TabIndex="2"
                                KeyboardNavigation.TabNavigation="Local">
                                <ContentPresenter
                                    Name="PART_SelectedContentHost"
                                    Margin="{TemplateBinding Control.Padding}"
                                    Content="{TemplateBinding TabControl.SelectedContent}"
                                    ContentSource="SelectedContent"
                                    ContentStringFormat="{TemplateBinding TabControl.SelectedContentStringFormat}"
                                    SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                            </Border>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TabItem}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames
                                BeginTime="00:00:00"
                                Storyboard.TargetName="HoverBorder"
                                Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.5" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames
                                BeginTime="00:00:00"
                                Storyboard.TargetName="HoverBorder"
                                Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="SelectedOn">
                            <DoubleAnimationUsingKeyFrames
                                BeginTime="00:00:00"
                                Storyboard.TargetName="SelectedBorder"
                                Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="SelectedOff">
                            <DoubleAnimationUsingKeyFrames
                                BeginTime="00:00:00"
                                Storyboard.TargetName="SelectedBorder"
                                Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.0000050" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="ShadowOn">
                            <DoubleAnimationUsingKeyFrames
                                BeginTime="00:00:00"
                                Storyboard.TargetName="ShadowBorder"
                                Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="ShadowOff">
                            <DoubleAnimationUsingKeyFrames
                                BeginTime="00:00:00"
                                Storyboard.TargetName="ShadowBorder"
                                Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.0000050" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid
                        x:Name="TabItemGrid"
                        Height="48"
                        Margin="20,0,-4,0"
                        VerticalAlignment="Bottom"
                        Background="Transparent"
                        SnapsToDevicePixels="True">

                        <Border
                            x:Name="HoverBorder"
                            Margin="2"
                            Background="{StaticResource TabHoverColor}"
                            BorderThickness="0"
                            CornerRadius="24,0,0,24"
                            Opacity="0" />
                        <Border
                            x:Name="SelectedBorder"
                            Background="{StaticResource SelectedTabBackground}"
                            CornerRadius="20,0,0,20"
                            Opacity="0" />
                        <Grid x:Name="ContentGrid" Background="Transparent">
                            <StackPanel Orientation="Horizontal">
                                <Image
                                    Width="40"
                                    Height="40"
                                    Margin="5,1"
                                    Source="{TemplateBinding Tag}" />
                                <ContentPresenter
                                    Name="Content"
                                    Margin="5,1,10,1"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    Content="{TemplateBinding HeaderedContentControl.Header}"
                                    ContentSource="Header"
                                    ContentStringFormat="{TemplateBinding HeaderedContentControl.HeaderStringFormat}"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                    TextBlock.Foreground="White"
                                    TextBlock.TextAlignment="Center" />
                            </StackPanel>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
                            </MultiTrigger.ExitActions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="Selector.IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                        </MultiTrigger>

                        <Trigger Property="Selector.IsSelected" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="SelectedOff_BeginStoryboard" Storyboard="{StaticResource SelectedOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="SelectedOn_BeginStoryboard" Storyboard="{StaticResource SelectedOn}" />
                            </Trigger.EnterActions>
                            <Setter TargetName="ContentGrid" Property="Panel.ZIndex" Value="3" />
                            <Setter TargetName="SelectedBorder" Property="Panel.ZIndex" Value="3" />
                            <Setter TargetName="Content" Property="TextBlock.Foreground" Value="Black" />
                        </Trigger>

                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter TargetName="SelectedBorder" Property="CornerRadius" Value="30,0,0,30" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
                        Margin="2"
                        SnapsToDevicePixels="true"
                        Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                        StrokeDashArray="1 2"
                        StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="ToggleSwitch.BorderBrush">#BABABA</SolidColorBrush>
    <SolidColorBrush x:Key="ToggleSwitch.Thumb.BackgroundBrush">#E3E3E3</SolidColorBrush>
    <SolidColorBrush x:Key="ToggleSwitch.Checked.BackgroundBrush">#64CE26</SolidColorBrush>
    <SolidColorBrush x:Key="ToggleSwitch.Unchecked.BackgroundBrush">Red</SolidColorBrush>
    <SolidColorBrush x:Key="ToggleSwitch.Disabled.BackgroundBrush">#BCBCBC</SolidColorBrush>

    <Style x:Key="ToggleSwitchStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="Width" Value="80" />
        <Setter Property="Height" Value="30" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid
                        x:Name="templateRoot"
                        Background="Transparent"
                        SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Border
                            x:Name="RootBorder"
                            Grid.Column="0"
                            Grid.ColumnSpan="3"
                            Background="{StaticResource ToggleSwitch.BorderBrush}"
                            BorderBrush="{StaticResource ToggleSwitch.BorderBrush}"
                            BorderThickness="1" />
                        <Border
                            x:Name="UncheckedContent"
                            Grid.Column="1"
                            Grid.ColumnSpan="2"
                            Margin="-1,1,1,1"
                            Background="{StaticResource ToggleSwitch.Unchecked.BackgroundBrush}"
                            BorderThickness="0">
                            <TextBlock
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontSize="14"
                                FontWeight="SemiBold"
                                Foreground="White"
                                Text="OFF" />
                        </Border>
                        <Border
                            x:Name="UncheckedThumb"
                            Grid.Column="0"
                            Background="{StaticResource ToggleSwitch.Thumb.BackgroundBrush}"
                            BorderBrush="{StaticResource ToggleSwitch.BorderBrush}"
                            BorderThickness="2" />
                        <Border
                            x:Name="CheckedContent"
                            Grid.Column="0"
                            Grid.ColumnSpan="2"
                            Margin="1,1,-1,1"
                            Background="{StaticResource ToggleSwitch.Checked.BackgroundBrush}"
                            BorderThickness="0"
                            Opacity="0">
                            <TextBlock
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontSize="14"
                                FontWeight="SemiBold"
                                Foreground="White"
                                Text="ON" />
                        </Border>
                        <Border
                            x:Name="CheckedThumb"
                            Grid.Column="2"
                            Background="{StaticResource ToggleSwitch.Thumb.BackgroundBrush}"
                            BorderBrush="{StaticResource ToggleSwitch.BorderBrush}"
                            BorderThickness="2"
                            Opacity="0" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="Padding" Value="0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true" />
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="CheckedContent" Property="Background" Value="{StaticResource ToggleSwitch.Disabled.BackgroundBrush}" />
                            <Setter TargetName="UncheckedContent" Property="Background" Value="{StaticResource ToggleSwitch.Disabled.BackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true" />
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="UncheckedThumb" Property="Opacity" Value="0" />
                            <Setter TargetName="UncheckedContent" Property="Opacity" Value="0" />
                            <Setter TargetName="CheckedThumb" Property="Opacity" Value="1" />
                            <Setter TargetName="CheckedContent" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MiniPlayerSwitchStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="Width" Value="30" />
        <Setter Property="Height" Value="30" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid
                        x:Name="templateRoot"
                        Background="Transparent"
                        SnapsToDevicePixels="True">
                        <Image
                            x:Name="UncheckedContent"
                            Width="22"
                            Height="22"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Source="/Assets/Icons/PlayMini.png" />
                        <Image
                            x:Name="CheckedContent"
                            Width="22"
                            Height="22"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Opacity="0"
                            Source="/Assets/Icons/PauseMini.png" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="Padding" Value="0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true" />
                        <Trigger Property="IsEnabled" Value="false" />
                        <Trigger Property="IsPressed" Value="true" />
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="UncheckedContent" Property="Opacity" Value="0" />
                            <Setter TargetName="CheckedContent" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PlayerSwitchStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="Width" Value="120" />
        <Setter Property="Height" Value="30" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid
                        x:Name="templateRoot"
                        Background="Transparent"
                        SnapsToDevicePixels="True">
                        <StackPanel x:Name="UncheckedContent" Orientation="Horizontal">
                            <Image
                                Width="22"
                                Height="22"
                                Margin="4"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Source="/Assets/Icons/PlayMini.png" />
                            <TextBlock
                                x:Name="UncheckedText"
                                VerticalAlignment="Center"
                                Cursor="Hand"
                                Foreground="{StaticResource DefaultBlueBrush}"
                                Text="Start Timer" />

                        </StackPanel>
                        <StackPanel
                            x:Name="CheckedContent"
                            Opacity="0"
                            Orientation="Horizontal">
                            <Image
                                Width="22"
                                Height="22"
                                Margin="4"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Source="/Assets/Icons/PlayMini.png" />
                            <TextBlock
                                x:Name="CheckedText"
                                VerticalAlignment="Center"
                                Cursor="Hand"
                                Foreground="{StaticResource DefaultBlueBrush}"
                                Text="Pause Timer" />

                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="Padding" Value="0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="CheckedText" Property="TextDecorations" Value="Underline" />
                            <Setter TargetName="UncheckedText" Property="TextDecorations" Value="Underline" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="CheckedText" Property="Foreground" Value="{StaticResource DefaultDisabledBrush}" />
                            <Setter TargetName="UncheckedText" Property="Foreground" Value="{StaticResource DefaultDisabledBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="CheckedText" Property="TextDecorations" Value="Underline" />
                            <Setter TargetName="UncheckedText" Property="TextDecorations" Value="Underline" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="UncheckedContent" Property="Opacity" Value="0" />
                            <Setter TargetName="CheckedContent" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TimelineSwitchStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="Width" Value="100" />
        <Setter Property="Height" Value="32" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid
                        x:Name="templateRoot"
                        Background="Transparent"
                        SnapsToDevicePixels="True">
                        <StackPanel
                            x:Name="ContentPanel"
                            Opacity="1"
                            Orientation="Horizontal">
                            <Image
                                Width="30"
                                Height="30"
                                Margin="4"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Source="/Assets/Icons/Timeline.png" />
                            <TextBlock
                                x:Name="TextContent"
                                VerticalAlignment="Center"
                                Cursor="Hand"
                                Foreground="{StaticResource DefaultBlueBrush}"
                                Text="Timeline" />

                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="Padding" Value="0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="TextContent" Property="TextDecorations" Value="Underline" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="TextContent" Property="Foreground" Value="{StaticResource DefaultDisabledBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="TextContent" Property="TextDecorations" Value="Underline" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true" />
                        <Trigger Property="IsChecked" Value="{x:Null}" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <SolidColorBrush x:Key="Header1TextForeground">#676767</SolidColorBrush>
    <SolidColorBrush x:Key="Header2TextForeground">#4894FC</SolidColorBrush>
    <SolidColorBrush x:Key="LabelHeaderTextForeground">#474747</SolidColorBrush>

    <Style x:Key="Header1TextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="22" />
        <Setter Property="Foreground" Value="{StaticResource Header1TextForeground}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="20,10" />
    </Style>

    <Style x:Key="Header2TextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Foreground" Value="{StaticResource Header2TextForeground}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="20,10" />
    </Style>

    <Style x:Key="LabelHeaderTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Foreground" Value="{StaticResource LabelHeaderTextForeground}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="20,10,20,5" />
    </Style>

    <Style x:Key="UnderlineStyle" TargetType="{x:Type Border}">
        <Setter Property="BorderThickness" Value="0,0,0,2" />
        <Setter Property="BorderBrush" Value="#CACACA" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="Height" Value="2" />
        <Setter Property="Margin" Value="20,0" />
    </Style>

    <SolidColorBrush x:Key="Button.Default.Background" Color="#4894FC" />
    <SolidColorBrush x:Key="Button.Static.Border" Color="#4894FC" />
    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#774894FC" />
    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1" />
    <SolidColorBrush x:Key="Button.Pressed.Background" Color="#4894FC" />
    <SolidColorBrush x:Key="Button.Pressed.Border" Color="#4894FC" />
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4" />
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5" />
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383" />
    <Style x:Key="CustomButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}" />
        <Setter Property="Foreground" Value="{StaticResource Button.Default.Background}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="4"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            TextBlock.Foreground="{TemplateBinding Foreground}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefault" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Default.Background}" />
                            <Setter TargetName="contentPresenter" Property="TextBlock.Foreground" Value="White" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource Button.MouseOver.Background}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.MouseOver.Border}" />
                            <Setter TargetName="contentPresenter" Property="TextBlock.Foreground" Value="Black" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Pressed.Background}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Pressed.Border}" />
                            <Setter TargetName="contentPresenter" Property="TextBlock.Foreground" Value="White" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Disabled.Background}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Disabled.Border}" />
                            <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource Button.Disabled.Foreground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HyperlinkButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource Button.Default.Background}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="4"
                        SnapsToDevicePixels="true">

                        <TextBlock
                            x:Name="contentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            Foreground="{StaticResource Button.Default.Background}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            Text="{TemplateBinding Content}"
                            TextDecorations="Underline" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefault" Value="true" />
                        <Trigger Property="IsMouseOver" Value="true" />
                        <Trigger Property="IsPressed" Value="true" />
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="contentPresenter" Property="Foreground" Value="{StaticResource Button.Disabled.Foreground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ImageTextButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource Button.Default.Background}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <StackPanel Orientation="Horizontal">

                        <Image
                            Width="20"
                            Height="20"
                            Margin="6,0"
                            Source="/Assets/Icons/Copy.png" />
                        <TextBlock
                            x:Name="contentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            Foreground="{StaticResource Button.Default.Background}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            Text="{TemplateBinding Content}" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefault" Value="true" />
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="contentPresenter" Property="TextDecorations" Value="Underline" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="contentPresenter" Property="TextDecorations" Value="Underline" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="contentPresenter" Property="Foreground" Value="{StaticResource Button.Disabled.Foreground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TextButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource Button.Default.Background}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="4"
                        SnapsToDevicePixels="true">

                        <TextBlock
                            x:Name="contentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            Foreground="{StaticResource Button.Default.Background}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            Text="{TemplateBinding Content}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefault" Value="true" />
                        <Trigger Property="IsMouseOver" Value="true" />
                        <Trigger Property="IsPressed" Value="true" />
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="contentPresenter" Property="Foreground" Value="{StaticResource Button.Disabled.Foreground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="ImageButton.Default.Background" Color="#4894FC" />
    <SolidColorBrush x:Key="ImageButton.Static.Border" Color="Transparent" />
    <SolidColorBrush x:Key="ImageButton.MouseOver.Background" Color="White" />
    <SolidColorBrush x:Key="ImageButton.MouseOver.Border" Color="#FF007AFF" />
    <SolidColorBrush x:Key="ImageButton.Pressed.Background" Color="#66007AFF" />
    <SolidColorBrush x:Key="ImageButton.Pressed.Border" Color="#FF007AFF" />
    <SolidColorBrush x:Key="ImageButton.Disabled.Background" Color="#FFF4F4F4" />
    <SolidColorBrush x:Key="ImageButton.Disabled.Border" Color="#FFADB2B5" />
    <SolidColorBrush x:Key="ImageButton.Disabled.Foreground" Color="#FF838383" />

    <Style x:Key="ImageButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="30" />
        <Setter Property="Height" Value="30" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{StaticResource ImageButton.Static.Border}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="0"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            TextBlock.Foreground="{StaticResource ImageButton.Default.Background}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefault" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource ImageButton.Default.Background}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource ImageButton.MouseOver.Background}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource ImageButton.MouseOver.Border}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource ImageButton.Pressed.Background}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource ImageButton.Pressed.Border}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource ImageButton.Disabled.Background}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource ImageButton.Disabled.Border}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LeftImageButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="30" />
        <Setter Property="Height" Value="30" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{StaticResource ImageButton.Static.Border}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="border"
                        Background="Transparent"
                        BorderBrush="{StaticResource DefaultOutlineBrush}"
                        BorderThickness="1,1,0,1"
                        CornerRadius="3,0,0,3"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefault" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource ImageButton.Default.Background}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource ImageButton.MouseOver.Background}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource ImageButton.Pressed.Background}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource ImageButton.Disabled.Background}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource ImageButton.Disabled.Border}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RightImageButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="30" />
        <Setter Property="Height" Value="30" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{StaticResource ImageButton.Static.Border}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="border"
                        Background="Transparent"
                        BorderBrush="{StaticResource DefaultOutlineBrush}"
                        BorderThickness="1,1,1,1"
                        CornerRadius="0,3,3,0"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefault" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource ImageButton.Default.Background}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource ImageButton.MouseOver.Background}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource ImageButton.Pressed.Background}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource ImageButton.Disabled.Background}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource ImageButton.Disabled.Border}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ImageRadioButtonStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="Width" Value="40" />
        <Setter Property="Height" Value="40" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Background" Value="White" />
        <Setter Property="BorderBrush" Value="{StaticResource ImageButton.Static.Border}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid
                        x:Name="templateRoot"
                        Background="Transparent"
                        SnapsToDevicePixels="True">
                        <Border
                            x:Name="radioButtonBorder"
                            Margin="0"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="0" />
                        <ContentPresenter
                            x:Name="UncheckedContentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Tag}"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <ContentPresenter
                            x:Name="CheckedContentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="radioButtonBorder" Property="Background" Value="{StaticResource ImageButton.MouseOver.Background}" />
                            <Setter TargetName="radioButtonBorder" Property="BorderBrush" Value="{StaticResource ImageButton.MouseOver.Border}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="radioButtonBorder" Property="Background" Value="{StaticResource ImageButton.Disabled.Background}" />
                            <Setter TargetName="radioButtonBorder" Property="BorderBrush" Value="{StaticResource ImageButton.Disabled.Border}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="radioButtonBorder" Property="Background" Value="{StaticResource ImageButton.Pressed.Background}" />
                            <Setter TargetName="radioButtonBorder" Property="BorderBrush" Value="{StaticResource ImageButton.Pressed.Border}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="UncheckedContentPresenter" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="CheckedContentPresenter" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="TimerToggleSwitch.Unchecked.BackgroundBrush">#64CE26</SolidColorBrush>
    <SolidColorBrush x:Key="TimerToggleSwitch.Checked.BackgroundBrush">Orange</SolidColorBrush>

    <Style x:Key="TimerToggleSwitchStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="Width" Value="120" />
        <Setter Property="Height" Value="40" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid
                        x:Name="templateRoot"
                        Background="Transparent"
                        SnapsToDevicePixels="True">

                        <Border
                            x:Name="UncheckedContent"
                            Background="{StaticResource TimerToggleSwitch.Unchecked.BackgroundBrush}"
                            BorderThickness="0">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="32" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Image
                                    Width="20"
                                    Height="20"
                                    Margin="4"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Center"
                                    Source="/Assets/Icons/Play.png" />
                                <TextBlock
                                    Grid.Column="1"
                                    Margin="4,0,0,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    FontSize="14"
                                    Foreground="White"
                                    Text="Start Timer" />
                            </Grid>
                        </Border>
                        <Border
                            x:Name="CheckedContent"
                            Background="{StaticResource TimerToggleSwitch.Checked.BackgroundBrush}"
                            BorderThickness="0"
                            Opacity="0">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="32" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Image
                                    Width="20"
                                    Height="20"
                                    Margin="4"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Center"
                                    Source="/Assets/Icons/Pause.png" />
                                <TextBlock
                                    Grid.Column="1"
                                    Margin="4,0,0,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    FontSize="14"
                                    Foreground="White"
                                    Text="Pause Timer" />
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="Padding" Value="0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true" />
                        <Trigger Property="IsEnabled" Value="false" />
                        <Trigger Property="IsPressed" Value="true" />
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="UncheckedContent" Property="Opacity" Value="0" />
                            <Setter TargetName="CheckedContent" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="Item.MouseOver.Background" Color="#994894FC" />
    <SolidColorBrush x:Key="Item.MouseOver.Border" Color="#a826A0Da" />
    <SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="#3DDADADA" />
    <SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="#FFDADADA" />
    <SolidColorBrush x:Key="Item.SelectedActive.Background" Color="#DD4894FC" />
    <SolidColorBrush x:Key="Item.SelectedActive.Border" Color="#FF26A0DA" />
    <Style x:Key="CustomListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="4,2" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="#474747" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <StackPanel>
                        <Separator x:Name="Separator" Margin="4,0" />
                        <Border
                            x:Name="Bd"
                            Margin="4"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                            <ContentPresenter
                                x:Name="contentPresenter"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource PreviousData}}" Value="{x:Null}">
                            <Setter TargetName="Separator" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource Item.MouseOver.Background}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="False" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource Item.SelectedActive.Background}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource Item.SelectedActive.Border}" />
                            <Setter Property="Foreground" Value="White" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="True" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource Item.SelectedActive.Background}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource Item.SelectedActive.Border}" />
                            <Setter TargetName="contentPresenter" Property="TextBlock.Foreground" Value="White" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Bd" Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="ListBox.Static.Background" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="ListBox.Static.Border" Color="#FFABADB3" />
    <SolidColorBrush x:Key="ListBox.Disabled.Background" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="ListBox.Disabled.Border" Color="#FFD9D9D9" />
    <Style x:Key="CostCenterListBoxStyle" TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="{StaticResource ListBox.Static.Background}" />
        <Setter Property="BorderBrush" Value="{StaticResource ListBox.Static.Border}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource CustomListBoxItemStyle}" />
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate DataType="{x:Type models:JobTitle}">
                    <StackPanel Margin="4,2">
                        <TextBlock
                            Margin="0"
                            HorizontalAlignment="Left"
                            FontSize="16"
                            Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}"
                            Text="{Binding Name}" />
                        <TextBlock
                            Margin="0,2,0,0"
                            HorizontalAlignment="Left"
                            FontSize="12"
                            Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}"
                            Text="{Binding CostCenter}" />
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border
                        x:Name="Bd"
                        Padding="1"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true">
                        <ScrollViewer Padding="{TemplateBinding Padding}" Focusable="false">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource ListBox.Disabled.Background}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ListBox.Disabled.Border}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true" />
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--<Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel Margin="0,0,0,1" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>-->
    </Style>

    <DataTemplate x:Key="CopyEntryTemplate" DataType="{x:Type models:CopyEntry}">
        <Grid HorizontalAlignment="Stretch">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="100" />
            </Grid.ColumnDefinitions>
            <CheckBox
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                VerticalContentAlignment="Center"
                Content="{Binding Path=Details}"
                IsChecked="{Binding Path=IsSelected, Mode=TwoWay}" />
            <TextBlock
                Grid.Column="1"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                FontSize="14"
                Foreground="{StaticResource DefaultOutlineBrush}"
                Text="{Binding Path=LoggedTime}" />
        </Grid>
    </DataTemplate>

    <SolidColorBrush x:Key="TimeSpan.Focus.Brush">#007AFF</SolidColorBrush>
    <SolidColorBrush x:Key="TimeSpan.Fill.Brush">#676767</SolidColorBrush>
    <SolidColorBrush x:Key="TimeSpan.DisabledFill.Brush">#ABABAB</SolidColorBrush>
    <SolidColorBrush x:Key="TimeSpan.Border.Brush">#878787</SolidColorBrush>
    <SolidColorBrush x:Key="TimeSpan.DisabledBorder.Brush">#ABABAB</SolidColorBrush>

    <Style x:Key="TimeSpanRepeatUpButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border
                        x:Name="border"
                        Background="Transparent"
                        BorderBrush="{StaticResource TimeSpan.Border.Brush}"
                        BorderThickness="1">
                        <Path
                            Name="path"
                            Width="10"
                            Height="8"
                            HorizontalAlignment="Center"
                            Data="M 5,10 L 15,10 L 10,5 L 5,10"
                            Fill="{StaticResource TimeSpan.Fill.Brush}"
                            Stretch="Fill" />

                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="path" Property="Fill" Value="{StaticResource TimeSpan.Focus.Brush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource TimeSpan.DisabledBorder.Brush}" />
                            <Setter TargetName="path" Property="Fill" Value="{StaticResource TimeSpan.DisabledFill.Brush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TimeSpanRepeatDownButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border
                        x:Name="border"
                        Background="Transparent"
                        BorderBrush="{StaticResource TimeSpan.Border.Brush}"
                        BorderThickness="1">
                        <Path
                            Name="path"
                            Width="10"
                            Height="8"
                            HorizontalAlignment="Center"
                            Data="M 5,5 L 10,10 L 15,5 L 5,5"
                            Fill="{StaticResource TimeSpan.Fill.Brush}"
                            Stretch="Fill" />

                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="path" Property="Fill" Value="{StaticResource TimeSpan.Focus.Brush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource TimeSpan.DisabledBorder.Brush}" />
                            <Setter TargetName="path" Property="Fill" Value="{StaticResource TimeSpan.DisabledFill.Brush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BlankButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="Transparent" BorderThickness="0" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BlankWithContentButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="Transparent" BorderThickness="0">
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            TextBlock.Foreground="{TemplateBinding Foreground}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="CloseButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="ToolTip" Value="Close" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="BorderRect"
                        Width="30"
                        Height="30"
                        Background="Transparent"
                        BorderBrush="Transparent"
                        BorderThickness="0">

                        <Canvas Width="10" Height="10">
                            <Path
                                x:Name="content"
                                Data="F1 M 5.533,5.000 L 10.000,9.467 L 9.467,10.000 L 5.000,5.533 L 0.533,10.000 L 0.000,9.467 L 4.467,5.000 L 0.000,0.533 L 0.533,0.000 L 5.000,4.467 L 9.467,0.000 L 10.000,0.533 L 5.533,5.000 Z"
                                Fill="Red"
                                SnapsToDevicePixels="True" />
                        </Canvas>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsMouseOver" Value="true">
                            <Setter TargetName="content" Property="Fill" Value="White" />
                            <Setter TargetName="BorderRect" Property="Background" Value="Red" />
                        </Trigger>
                        <Trigger Property="Button.IsPressed" Value="true">
                            <Setter TargetName="content" Property="Fill" Value="Black" />
                            <Setter TargetName="BorderRect" Property="Background" Value="#77FF0000" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="EllipsisButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="40" />
        <Setter Property="Height" Value="40" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="#4894FC" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="20"
                        SnapsToDevicePixels="true">
                        <Canvas Width="40" Height="40">
                            <Path
                                x:Name="path"
                                Data="F1 M 9.131,17.268 C 7.622,17.268 6.399,18.491 6.399,20.000 C 6.399,21.509 7.622,22.732 9.131,22.732 C 10.640,22.732 11.863,21.509 11.863,20.000 C 11.863,18.491 10.640,17.268 9.131,17.268 Z M 30.869,17.268 C 29.360,17.268 28.137,18.491 28.137,20.000 C 28.137,21.509 29.360,22.732 30.869,22.732 C 32.378,22.732 33.601,21.509 33.601,20.000 C 33.601,18.491 32.378,17.268 30.869,17.268 Z M 22.732,20.000 C 22.732,21.509 21.509,22.732 20.000,22.732 C 18.491,22.732 17.268,21.509 17.268,20.000 C 17.268,18.491 18.491,17.268 20.000,17.268 C 21.509,17.268 22.732,18.491 22.732,20.000 Z"
                                Fill="{TemplateBinding Foreground}" />
                        </Canvas>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefault" Value="true" />
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#DD4894FC" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#4894FC" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#CDCDCD" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NotificationsButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="200" />
        <Setter Property="Height" Value="40" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="#4894FC" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <StackPanel Margin="0" Orientation="Horizontal">
                        <Image
                            Width="40"
                            Height="40"
                            Source="/Assets/Icons/Notification.png" />
                        <TextBlock
                            Margin="12,0"
                            VerticalAlignment="Center"
                            FontSize="18"
                            Foreground="White"
                            Text="Notifications" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefault" Value="true" />
                        <Trigger Property="IsMouseOver" Value="true" />
                        <Trigger Property="IsPressed" Value="true" />
                        <Trigger Property="IsEnabled" Value="false" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LeftRadioButtonStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="Width" Value="80" />
        <Setter Property="Height" Value="30" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{StaticResource DefaultOutlineBrush}" />
        <Setter Property="Foreground" Value="{StaticResource DefaultOutlineBrush}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid
                        x:Name="templateRoot"
                        Background="Transparent"
                        SnapsToDevicePixels="True">
                        <Border
                            x:Name="border"
                            Margin="0"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1,1,0,1"
                            CornerRadius="3,0,0,3" />
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            TextBlock.Foreground="{StaticResource DefaultOutlineBrush}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true" />
                        <Trigger Property="IsEnabled" Value="false" />
                        <Trigger Property="IsPressed" Value="true" />
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="contentPresenter" Property="TextBlock.Foreground" Value="White" />
                            <Setter TargetName="border" Property="Background" Value="{StaticResource DefaultBlueBrush}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RightRadioButtonStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="Width" Value="80" />
        <Setter Property="Height" Value="30" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{StaticResource DefaultOutlineBrush}" />
        <Setter Property="Foreground" Value="{StaticResource DefaultOutlineBrush}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid
                        x:Name="templateRoot"
                        Background="Transparent"
                        SnapsToDevicePixels="True">
                        <Border
                            x:Name="border"
                            Margin="0"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="0,1,1,1"
                            CornerRadius="0,3,3,0" />
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            TextBlock.Foreground="{StaticResource DefaultOutlineBrush}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true" />
                        <Trigger Property="IsEnabled" Value="false" />
                        <Trigger Property="IsPressed" Value="true" />
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="contentPresenter" Property="TextBlock.Foreground" Value="White" />
                            <Setter TargetName="border" Property="Background" Value="{StaticResource DefaultBlueBrush}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>