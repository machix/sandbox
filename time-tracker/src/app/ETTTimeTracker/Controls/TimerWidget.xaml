<UserControl
    x:Class="ETTTimeTracker.Controls.TimerWidget"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:ETTTimeTracker.Controls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    d:DesignHeight="40"
    d:DesignWidth="800"
    mc:Ignorable="d">
    <UserControl.Resources />
    <Grid Background="White">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <TextBox
            x:Name="ActivityText"
            Margin="5,0"
            VerticalAlignment="Center"
            BorderThickness="0"
            FontSize="14"
            Text="{Binding ActiveTask.Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
        <TextBlock
            x:Name="ActivityPlaceholder"
            Margin="5,0"
            VerticalAlignment="Center"
            FontSize="14"
            Foreground="Black"
            IsHitTestVisible="False"
            Text="What are you working on?"
            TextWrapping="Wrap">
            <TextBlock.Style>
                <Style TargetType="{x:Type TextBlock}">
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Text, ElementName=ActivityText}" Value="">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>
        <Button
            x:Name="FolderButton"
            Grid.Column="1"
            Margin="5,0"
            Click="OnFolderClick"
            Style="{StaticResource ImageButtonStyle}">
            <Image Margin="2" Source="/Assets/Icons/Folder.png" />
        </Button>
        <Popup
            x:Name="CostCenterPopup"
            AllowsTransparency="True"
            IsOpen="False"
            PlacementTarget="{Binding ElementName=FolderButton}"
            PopupAnimation="Slide"
            StaysOpen="False">
            <ListBox
                x:Name="JobList"
                Width="300"
                Height="850"
                ItemsSource="{Binding Jobs}"
                SelectedItem="{Binding SelectedJobTitle, Mode=TwoWay}"
                SelectionChanged="OnJoblistSelectionChanged"
                Style="{StaticResource CostCenterListBoxStyle}" />
        </Popup>
        <Button
            x:Name="NotesButton"
            Grid.Column="2"
            Margin="0,0,5,0"
            Click="OnShowNotes"
            Style="{StaticResource ImageButtonStyle}">
            <Image Margin="2" Source="/Assets/Icons/Note.png" />
        </Button>
        <Popup
            x:Name="NotesPopup"
            MinWidth="280"
            MinHeight="400"
            AllowsTransparency="True"
            IsOpen="False"
            PlacementTarget="{Binding ElementName=NotesButton}"
            PopupAnimation="Slide"
            StaysOpen="True">
            <Grid Background="#F2F2F2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="40" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="60" />
                </Grid.RowDefinitions>
                <TextBlock
                    Margin="10,0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    FontSize="16"
                    Foreground="#878787"
                    Text="Notes" />
                <Border
                    Margin="10,0"
                    BorderThickness="0,0,0,1"
                    Style="{StaticResource UnderlineStyle}" />

                <TextBox
                    x:Name="NotesText"
                    Grid.Row="1"
                    Margin="10"
                    AcceptsReturn="True"
                    FontSize="14"
                    Text="{Binding ActiveTask.Comments, Mode=OneWay}"
                    TextWrapping="Wrap" />

                <TextBlock
                    x:Name="NotesPlaceholder"
                    Grid.Row="1"
                    Margin="12"
                    FontSize="14"
                    Foreground="DarkGray"
                    IsHitTestVisible="False"
                    Text="Enter your notes here..."
                    TextWrapping="Wrap">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Visibility" Value="Collapsed" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Text, ElementName=NotesText}" Value="">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>

                <Grid Grid.Row="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <StackPanel Grid.Column="1" Orientation="Horizontal">
                        <Button
                            Width="120"
                            Height="40"
                            Margin="10,0"
                            Click="OnSaveNotes"
                            Content="Save"
                            FontSize="14"
                            IsDefault="True"
                            Style="{DynamicResource CustomButtonStyle}" />
                        <Button
                            Width="120"
                            Height="40"
                            Margin="10,0,10,0"
                            Background="#9A9A9A"
                            Click="OnCancelNotes"
                            Content="Cancel"
                            FontSize="14"
                            Foreground="White"
                            Style="{DynamicResource CustomButtonStyle}" />
                    </StackPanel>
                </Grid>
                <Border
                    Grid.Row="2"
                    Margin="10,0"
                    VerticalAlignment="Top"
                    BorderThickness="0,1,0,0"
                    Style="{StaticResource UnderlineStyle}" />

            </Grid>
        </Popup>
        <StackPanel
            x:Name="TimerPanel"
            Grid.Column="3"
            Orientation="Horizontal"
            Visibility="Visible">
            <TextBlock
                x:Name="TimerContent"
                Margin="10,0"
                VerticalAlignment="Center"
                FontSize="24"
                Foreground="#979797"
                Text="{Binding ActiveTask.AutoLoggedTimeString}" />
            <CheckBox
                x:Name="TimerSwitch"
                Margin="0"
                Checked="OnStartTimer"
                IsChecked="{Binding ActiveTask.IsTimerActive, Mode=OneWay}"
                Style="{StaticResource TimerToggleSwitchStyle}"
                Unchecked="OnPauseTimer" />
        </StackPanel>
        <StackPanel
            x:Name="ManualPanel"
            Grid.Column="3"
            Orientation="Horizontal"
            Visibility="Collapsed">
            <DatePicker
                Width="110"
                Height="30"
                Margin="5"
                VerticalContentAlignment="Center"
                SelectedDate="{Binding ActiveTask.TaskDate, Mode=TwoWay}" />
            <local:TimeSpanControl
                Height="30"
                Margin="0,5,5,5"
                Mode="Format12Hr"
                Value="{Binding ActiveTask.ManualStartTime, Mode=TwoWay}" />
            <local:TimeSpanControl
                Width="60"
                Height="30"
                Margin="0,5,5,5"
                Mode="Format12Hr"
                Value="{Binding ActiveTask.ManualEndTime, Mode=TwoWay}" />
            <Button
                Width="40"
                Height="40"
                Click="OnManualTimeEntered"
                Style="{StaticResource ImageButtonStyle}">
                <Image
                    Width="30"
                    Height="30"
                    Source="/Assets/Icons/Ok.png" />
            </Button>
        </StackPanel>
        <StackPanel
            x:Name="SelectionPanel"
            Grid.Column="4"
            Orientation="Horizontal">
            <RadioButton
                x:Name="AutoTimerButton"
                Checked="OnAutoTimerChecked"
                IsChecked="True"
                Style="{StaticResource ImageRadioButtonStyle}">
                <Image Margin="5" Source="/Assets/Icons/Timer_S.png" />
                <RadioButton.Tag>
                    <Image Margin="5" Source="/Assets/Icons/Timer_D.png" />
                </RadioButton.Tag>
            </RadioButton>
            <RadioButton
                x:Name="ManualTimerButton"
                Checked="OnManualTimerChecked"
                Style="{StaticResource ImageRadioButtonStyle}">
                <Image Margin="5" Source="/Assets/Icons/Manual_S.png" />
                <RadioButton.Tag>
                    <Image Margin="5" Source="/Assets/Icons/Manual_D.png" />
                </RadioButton.Tag>
            </RadioButton>
        </StackPanel>
        <Border
            Grid.Column="5"
            BorderBrush="#BABABA"
            BorderThickness="2,0,0,0" />
        <Button
            x:Name="SwitchToWidgetButton"
            Grid.Column="5"
            Margin="4,4,8,4"
            Padding="6"
            Click="OnSwitchToWidget"
            FontSize="13"
            Style="{StaticResource TextButtonStyle}">
            Switch to Widget
        </Button>
    </Grid>
</UserControl>
